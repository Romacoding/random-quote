{"version":3,"sources":["random_quote/core.cljs"],"mappings":";;;;AAIA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;;AAGpB,AAAA,AAAMC,AAAaC;AAAnB,AACE,AAAA,AAAA,AAAA,AAACC,AACW,AAAKC;AAAL,AACE,AAAA,AAACC,AAAMH,AAAMI,AAAY,AAAA,AAACC,AAAIH;;AAC9B,AAAA,AAACC,AAAMH,AAAMI,AAAc,AAAA,AAACC,AAAIH;AAH9C,AAIkB,AAAAI;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AAAaI;AAAb,AAAAN,AAAAE,AAAA,AAAoBK;AAApB,AACE,AAACC,AAAeF,AAAOC;;;AAE7C,AAAA,AAAME,AAAgBd;AAAtB,AACE,AAAA,AAAA,AAA6D,AAAA,AAAA,AAAAe,AAAQf,AAAW,AAAA,AAAA,AAAAe,AAAUf;;AAE5F,AAAA,AAAMgB,AAAUhB;AAAhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKuB,AAAA,AAAA,AAAAe,AAAQf,AACT,AAAA,AAAA,AAAAe,AAAUf,AAEhB,AAACc,AAAed;AARhC,AAU0B,AAACD,AAAYC;AAVvC;;AAYA,AAAA,AAAMiB;AAAN,AACE,AAAAC,AAAA,AAA2BF,AAASnB;AAApCsB,AAC0B,AAAA,AAAGE;AAD7B,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAGH,AAAA,AAAeE;AAAf,AACE,AAACL;;;AAEH,AAAA,AAAMM;AAAN,AACE,AAAA,AAACV","names":["js/random-quote","js/random-quote.core","js/random-quote.core.app-state","random-quote.core/app-state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","random-quote.core/fetch-link!","state","ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic","data","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p__32025","map__32026","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","status","status-text","js/console.log","random-quote.core/get-tweet-link","cljs.core/deref","random-quote.core/my-quote","random-quote.core/start","G__32028","G__32029","reagent.core/render-component","js/document","random-quote.core/init","random-quote.core/stop"],"sourcesContent":["(ns random-quote.core\n  (:require [ajax.core :refer [GET]]\n            [reagent.core :as reagent :refer [atom]]))\n\n(defonce app-state (atom {:text \"Learn everyday\"\n                          :author \"Roman Ostash\"}))\n\n(defn fetch-link! [state]\n  (GET \"https://quote-garden.herokuapp.com/quotes/random\"\n    {:handler (fn [data]\n                (swap! state assoc :text (get data \"quoteText\"))\n                (swap! state assoc :author (get data \"quoteAuthor\")))\n     :error-handler (fn [{:keys [status status-text]}]\n                      (js/console.log status status-text))}))\n\n(defn get-tweet-link [state]\n  (str \"https://twitter.com/intent/tweet?hashtags=quote&text=\" (:text @state) \"-\" (:author @state)))\n\n(defn my-quote [state]\n  [:div\n   [:h1 \"Random Quote Generator\"]\n   [:div.quote\n    [:div.quote-container\n     [:p.quote-content (:text @state)]\n     [:p.quote-author (:author @state)]]\n    [:div.quote-buttons\n     [:a {:href (get-tweet-link state)\n          :target \"_blank\"} \"tweet\"]\n     [:button {:on-click #(fetch-link! state)} \"next quote\"]]]])\n\n(defn start []\n  (reagent/render-component [my-quote app-state]\n                            (. js/document (getElementById \"app\"))))\n\n(defn ^:export init []\n  (start))\n\n(defn stop []\n  (js/console.log \"stop\"))\n"]}