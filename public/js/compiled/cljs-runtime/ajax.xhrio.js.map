{"version":3,"sources":["ajax/xhrio.cljs"],"mappings":"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","names":["cljs.core/PROTOCOL_SENTINEL","js/goog.net.XhrIo","p__44471","map__44472","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","this","uri","method","body","headers","timeout","with-credentials","response-format","progress-handler","handler","temp__5735__auto__","response-type","cljs.core/name","cljs.core/fn?","G__44474","goog.events/listen","js/goog.net.EventType.UPLOAD_PROGRESS","G__44475","G__44478","G__44479","G__44480","p1__44470#","goog.net.EventType/COMPLETE","G__44481","cljs.core/clj->js","goog.net.ErrorCode/ABORT","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","header","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","js/goog.net.XhrManager","p__44486","map__44487","id","priority","max-retries"],"sourcesContent":["(ns ajax.xhrio\n  (:require goog.net.EventType\n            goog.net.ErrorCode\n            [goog.net.XhrIo :as xhr]\n            [goog.net.XhrManager :as xhrm]\n            [goog.Uri :as uri]\n            [goog.json :as goog-json]\n            [goog.events :as events]\n            [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]))\n\n(extend-type goog.net.XhrIo\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format progress-handler]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (when-let [response-type (:type response-format)]\n      (.setResponseType this (name response-type)))\n    (when (fn? progress-handler)\n      (doto this\n        (.setProgressEventsEnabled true)\n        (events/listen goog.net.EventType.UPLOAD_PROGRESS progress-handler)))\n    (doto this\n      (events/listen goog.net.EventType/COMPLETE\n                     #(handler (.-target %)))\n      (.setTimeoutInterval timeout)\n      (.setWithCredentials with-credentials)\n      (.send uri method body (clj->js headers))))\n  AjaxRequest\n  (-abort [this] (.abort this goog.net.ErrorCode/ABORT))\n  AjaxResponse\n  (-body [this] (.getResponse this))\n  (-status [this] (.getStatus this))\n  (-status-text [this] (.getStatusText this))\n  (-get-all-headers [this]\n    (js->clj (.getResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this]\n    (= (.getLastErrorCode this) goog.net.ErrorCode/ABORT)))\n\n(extend-type goog.net.XhrManager\n  AjaxImpl\n  (-js-ajax-request\n    [this {:keys [uri method body headers\n                  id timeout priority max-retries]\n           :or {timeout 0}}\n     handler]\n    (.send this id uri method body (clj->js headers)\n           priority handler max-retries)))\n"]}